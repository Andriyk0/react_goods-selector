{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","showGood","value","rezult","length","join","arr","last","pop","App","state","selectedGood","this","className","type","onClick","setState","map","item","find","elem","prev","newSelectedGoods","indexOfGood","indexOf","splice","push","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,EAAW,SAACC,GAChB,IAAIC,EAAS,GAEb,GAAqB,IAAjBD,EAAME,OACRD,EAAS,yBACJ,GAAqB,IAAjBD,EAAME,OACfD,EAAM,UAAMD,EAAMG,KAAK,KAAjB,oBACD,CACL,IAAMC,EAAG,YAAOJ,GACVK,EAAOD,EAAIE,MAEjBL,EAAM,UAAMG,EAAID,KAAK,KAAf,gBAA2BE,EAA3B,iBAGR,OAAOJ,GAGHM,E,4MACJC,MAAQ,CACNC,aAAc,CAAC,Q,4CAGjB,WAAU,IAAD,OACCA,EAAiBC,KAAKF,MAAtBC,aAER,OACE,sBAAKE,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,UACGF,EAAaP,OAAS,GACrB,wBACES,UAAU,mBACVC,KAAK,SACLC,QAAS,WACP,EAAKC,SAAS,CAAEL,aAAc,MAJlC,mBAUF,qBAAIE,UAAU,0CAAd,2BAEGZ,EAASU,SAGd,qBAAKE,UAAU,YAAf,SACGb,EAAgBiB,KAAI,SAAAC,GAAI,OACvB,gCACE,4BAAIA,IACFP,EAAaQ,MAAK,SAAAC,GAAI,OAAIA,IAASF,KAEjC,wBACEL,UAAU,4BACVC,KAAK,SACLC,QAAS,WACP,EAAKC,UAAS,SAACK,GACb,IAAMC,EAAmBD,EAAKV,aAExBY,EAAcD,EAAiBE,QAAQN,GAI7C,OAFAI,EAAiBG,OAAOF,EAAa,GAE9B,CAAEZ,aAAcW,OAX7B,oBAmBA,wBACET,UAAU,6BACVC,KAAK,SACLC,QAAS,WACP,EAAKC,UAAS,SAACK,GACb,IAAMC,EAAmBD,EAAKV,aAI9B,OAFAW,EAAiBI,KAAKR,GAEf,CAAEP,aAAcW,OAT7B,sBAvBIJ,e,GA7BJS,IAAMC,WA4ETnB,I,MC7GfoB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.34204726.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string[];\n};\n\nconst showGood = (value:string[]) => {\n  let rezult = '';\n\n  if (value.length === 0) {\n    rezult = 'No goods selected';\n  } else if (value.length === 1) {\n    rezult = `${value.join(',')} is selected`;\n  } else {\n    const arr = [...value];\n    const last = arr.pop();\n\n    rezult = `${arr.join(',')} and ${last} are selected`;\n  }\n\n  return rezult;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGood: ['Jem'],\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"level\">\n          {selectedGood.length > 0 && (\n            <button\n              className=\"button is-danger\"\n              type=\"button\"\n              onClick={() => {\n                this.setState({ selectedGood: [] });\n              }}\n            >\n              Clear\n            </button>\n          )}\n          <h1 className=\"level-item has-text-centered App__title\">\n            Selected good:\n            {showGood(selectedGood)}\n          </h1>\n        </div>\n        <div className=\"App__item\">\n          {goodsFromServer.map(item => (\n            <div key={item}>\n              <p>{item}</p>\n              {(selectedGood.find(elem => elem === item))\n                ? (\n                  <button\n                    className=\"button is-danger is-small\"\n                    type=\"button\"\n                    onClick={() => {\n                      this.setState((prev) => {\n                        const newSelectedGoods = prev.selectedGood;\n\n                        const indexOfGood = newSelectedGoods.indexOf(item);\n\n                        newSelectedGoods.splice(indexOfGood, 1);\n\n                        return { selectedGood: newSelectedGoods };\n                      });\n                    }}\n                  >\n                    Remove\n                  </button>\n                )\n                : (\n                  <button\n                    className=\"button is-success is-small\"\n                    type=\"button\"\n                    onClick={() => {\n                      this.setState((prev) => {\n                        const newSelectedGoods = prev.selectedGood;\n\n                        newSelectedGoods.push(item);\n\n                        return { selectedGood: newSelectedGoods };\n                      });\n                    }}\n                  >\n                    Select\n                  </button>\n                )}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}